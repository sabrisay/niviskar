pipeline {
    agent any

    parameters {
        choice(name: 'ENV', choices: ['dev', 'staging', 'prod'], description: 'Select the environment')
        choice(name: 'SERVICE', choices: ['serviceA', 'serviceB', 'serviceC'], description: 'Select the service')
        choice(name: 'REGION', choices: ['us-west-2', 'us-east-1', 'eu-west-1'], description: 'Select the AWS region (ignored if prod)')
        string(name: 'SECRET_NAME', defaultValue: '', description: 'Enter the secret name')
        password(name: 'SECRET_VALUE', defaultValue: '', description: 'Enter the secret value (this will be hidden)')
    }

    environment {
        AWS_DEFAULT_REGION = "${params.ENV == 'prod' ? 'us-east-1' : params.REGION}" // Use us-east-1 for prod, selected region otherwise
    }

    stages {
        stage('Validate Input') {
            steps {
                script {
                    if (!params.SECRET_NAME || !params.SECRET_VALUE) {
                        error("Secret name and value cannot be empty.")
                    }
                    echo "Selected environment: ${params.ENV}"
                    echo "Target region: ${env.AWS_DEFAULT_REGION}"
                }
            }
        }

        stage('Create Secret in AWS Secrets Manager') {
            steps {
                script {
                    def secretPath = "sabri/${params.ENV}/services/${params.SERVICE}/${params.SECRET_NAME}"
                    echo "Creating secret at path: ${secretPath} in AWS Secrets Manager."

                    withAWS(region: env.AWS_DEFAULT_REGION) {
                        sh """
                        aws secretsmanager create-secret \
                            --name ${secretPath} \
                            --secret-string '${params.SECRET_VALUE}' \
                            || aws secretsmanager update-secret \
                            --secret-id ${secretPath} \
                            --secret-string '${params.SECRET_VALUE}'
                        """
                    }
                }
            }
        }
    }

    post {
        always {
            echo 'Pipeline completed.'
        }
    }
}